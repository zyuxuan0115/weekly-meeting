---
layout: post
title:  "2024-02-25 OpenFaaS + LLVM support for Rust"
date:   2024-02-25 1:53:46 -0500
categories: serverless functions
---

## OpenFaaS
- [openfaas](https://github.com/openfaas): there is no tutorial about how to run openfaas at all
	+ deploy existing containers to OpenFaaS [webpage](https://www.openfaas.com/blog/porting-existing-containers-to-openfaas/)
	+ [docker support](https://docs.openfaas.com/languages/dockerfile/)
  + [how to deploy functions using OpenFaaS](https://gcore.com/learning/create-serverless-functions-with-openfaas/) - super useful
	+ [first OpenFaaS Function with Python](https://docs.openfaas.com/tutorials/first-python-function/)
	
### the current version of OpenFaaS
- [tutorial](https://docs.openfaas.com/deployment/kubernetes/)
- steps for deploying OpenFaaS on the local cluster
  + first install Docker, golang
	+ install [arkade](https://github.com/alexellis/arkade)
	+ then install [KinD](https://kind.sigs.k8s.io/) 
    * I [installed from a released binary](https://kind.sigs.k8s.io/docs/user/quick-start/#installing-from-release-binaries)
  + create a cluster quickly
    * `kind create cluster`	
	+ [install cli](https://docs.openfaas.com/cli/install/)
    * `curl -SLsf https://get.arkade.dev/ | sudo sh`
  + run openfaas
    * `arkade install openfaas`

### change docker permission

```bash
> sudo groupadd docker 
> sudo gpasswd -a $USER docker
> newgrp docker 
> sudo chmod -R 777 /users/zyuxuan/.docker
```

## LLVM support for Rust 
- [Generate LLVM IR from Rust source code](https://crates.io/crates/llvm-ir)

```bash
# For Rust sources, you can use rustc's --emit=llvm-ir flag
# Of course you need to first install Rust
> rustc src/main.rs --emit=llvm-ir -O -C no-prepopulate-passes -C codegen-units=1
```

- to check the llvm version of `rustc`
	+ [webpage for changing the LLVM version](https://rustc-dev-guide.rust-lang.org/backend/updating-llvm.html)
  + [change the version of rustc](https://users.rust-lang.org/t/how-can-i-revert-to-older-version-of-rust/20497) 

```bash
# check the llvm version of rustc
> rustc --version --verbose
# change rustc to an older version, which supports LLVM-10.0
> rustup default 1.46
```

- build `rustc` from source: [link](https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html)

