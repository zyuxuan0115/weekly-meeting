---
layout: post
title:  "2023-12-04 socialMedia's RPC"
date:   2023-12-04 1:53:46 -0500
categories: serverless functions
---
### From nightcore's C++ workloads
- I made both `movieReview` and `socialNetwork` work on cloudlab machines 
- I checked if the `movieReview` workload contains the invocation `invoke_func_fn` 
	+ only nightcore [FaasWorker.h](https://github.com/zyuxuan0115/nightcore-test/blob/main/moviereview_singlenode/DeathStarBench/mediaMicroservices/src/FaasWorker.h) contains [invoke_func_fn_](https://github.com/zyuxuan0115/nightcore-test/blob/main/moviereview_singlenode/DeathStarBench/mediaMicroservices/src/FaasWorker.h)

![s1](/assets/2023-11-29/S1.png)

- I also check `socialNetwork` workload and it shows the same result.

```cpp
class ClientTransport : public apache::thrift::transport::TVirtualTransport<ClientTransport> {
public:
   ClientTransport(FaasWorker* parent, const std::string& func_name)
      : parent_(parent), func_name_(func_name) {}

   void write(const uint8_t* buf, uint32_t len) {
      out_buf_.write(buf, len);
   }

   uint32_t read(uint8_t* buf, uint32_t len) {
      return in_buf_.read(buf, len);
   }

   uint32_t readAll(uint8_t* buf, uint32_t len) {
      return in_buf_.readAll(buf, len);
   }

   void flush() override {
      uint8_t* data;
      uint32_t data_length;
      out_buf_.getBuffer(&data, &data_length);
      const char* output;
      size_t output_length;
      if (parent_->invoke_func_fn_(parent_->caller_context_, func_name_.c_str(),
                                   reinterpret_cast<const char*>(data),
                                   static_cast<size_t>(data_length),
                                   &output, &output_length) != 0) {
         throw apache::thrift::transport::TTransportException(
         apache::thrift::transport::TTransportException::UNKNOWN, "invoke_func call failed");
      }
      out_buf_.resetBuffer();
      in_buf_.resetBuffer(reinterpret_cast<uint8_t*>(const_cast<char*>(output)),
                          static_cast<uint32_t>(output_length));
      }

private:
   FaasWorker* parent_;
   std::string func_name_;
   apache::thrift::transport::TMemoryBuffer in_buf_;
   apache::thrift::transport::TMemoryBuffer out_buf_;
};
```

- will there be any other ways for nightcore to call another serverless function?

- also, in real workloads, the way how one serverless function is declared is different from the sample code
	+ For example in [MovieReviewService.cpp](https://github.com/zyuxuan0115/nightcore-test/blob/main/moviereview_singlenode/DeathStarBench/mediaMicroservices/src/MovieReviewService/MovieReviewService.cpp)



### How many times does the RPC being invoked
- unfortunately the serverless functions are compiled by `CMake`
	+ we are using `clang` + `opt`, so we need to convert CMake to normal shell commands.
	+ [the tutorial for cmake](https://www.internalpointers.com/post/modern-cmake-beginner-introduction)
	+ to run cmake, we need to install several dependencies:
		* [mongo-c-driver](git clone https://github.com/mongodb/mongo-c-driver.git)
		* `nlohmann-json3-dev` (the c++ json parser)
			* `sudo apt-get install nlohmann-json3-dev`
		* [amqpcpp](https://github.com/CopernicaMarketingSoftware/AMQP-CPP)
		* `boost library`: `sudo apt-get install libboost-all-dev`
### 
