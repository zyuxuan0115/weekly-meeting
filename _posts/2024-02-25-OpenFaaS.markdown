---
layout: post
title:  "2024-02-25 OpenFaaS + LLVM support for Rust"
date:   2024-02-25 1:53:46 -0500
categories: serverless functions
---

## OpenFaaS
- [openfaas](https://github.com/openfaas): there is no tutorial about how to run openfaas at all
	+ deploy existing containers to OpenFaaS [webpage](https://www.openfaas.com/blog/porting-existing-containers-to-openfaas/)
	+ [docker support](https://docs.openfaas.com/languages/dockerfile/)
  + [how to deploy functions using OpenFaaS](https://gcore.com/learning/create-serverless-functions-with-openfaas/) - super useful
	+ [first OpenFaaS Function with Python](https://docs.openfaas.com/tutorials/first-python-function/)

### change docker permission

```bash
> sudo groupadd docker 
> sudo gpasswd -a $USER docker
> newgrp docker 
> sudo chmod -R 777 /users/zyuxuan/.docker
```
	
### the current version of OpenFaaS
- [tutorial](https://docs.openfaas.com/deployment/kubernetes/)
- steps for deploying OpenFaaS on the local cluster
  + first install Docker, golang
	+ install [arkade](https://github.com/alexellis/arkade)
  + install [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/)
	+ then install [KinD](https://kind.sigs.k8s.io/) 
    * I [installed from a released binary](https://kind.sigs.k8s.io/docs/user/quick-start/#installing-from-release-binaries)
  + create a cluster quickly
    * `kind create cluster`	
	+ [install cli](https://docs.openfaas.com/cli/install/)
    * `curl -SLsf https://get.arkade.dev/ | sudo sh`
  + run openfaas
    * `arkade install openfaas`
    * to verify if you successfully run openfaas: 
      - `kubectl -n openfaas get deployments -l "release=openfaas, app=openfaas"`

```bash
# Forward the gateway to your machine
> kubectl rollout status -n openfaas deploy/gateway
> kubectl port-forward -n openfaas svc/gateway 8080:8080 &

# If basic auth is enabled, you can now log into your gateway:
> PASSWORD=$(kubectl get secret -n openfaas basic-auth -o jsonpath="{.data.basic-auth-password}" | base64 --decode; echo)
> echo -n $PASSWORD | faas-cli login --username admin --password-stdin
```

- delete a deployment in kubectl
  + `kubectl -n openfaas delete deployment gateway`

- to update a function
	+ first delete a function and then run `faas-cli remove appfleet-hello-world`

## LLVM support for Rust 
#### Theoretically, any language that can be converted into LLVM IR by its compiler frontend can be merged by the LLVM pass we write

- [Generate LLVM IR from Rust source code](https://crates.io/crates/llvm-ir)

```bash
# For Rust sources, you can use rustc's --emit=llvm-ir flag
# Of course you need to first install Rust
> rustc src/main.rs --emit=llvm-ir -O -C no-prepopulate-passes -C codegen-units=1
```

- to check the llvm version of `rustc`
	+ [webpage for changing the LLVM version](https://rustc-dev-guide.rust-lang.org/backend/updating-llvm.html)
  + [change the version of rustc](https://users.rust-lang.org/t/how-can-i-revert-to-older-version-of-rust/20497) 

```bash
# check the llvm version of rustc
> rustc --version --verbose
# change rustc to an older version, which supports LLVM-10.0
> rustup default 1.46
```

- build `rustc` from source: [link](https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html)

### Merge Rust and C functions
- original code is in seperate files.

![d1](/assets/2024-02-25/d1.png)

- What I told the compiler to do

![d2](/assets/2024-02-25/d2.png)

## Distributed tracing
### overall diagram
![d4](/assets/2024-02-25/d4.png)

### what profile data should be transfered
- caller+callee pair
- the number of the occurance of each caller+callee pair 
- the overall execution time of the function
	+ should not include the overhead for waiting a RPC to return

```json
{
  "function_exec_time": "0.5ms",
  "calls": [
    {
      "Caller":"Func 1",
      "Callee":"Func 3",
      "counts":"1" 
    },
    {
      "Caller":"Func 1",
      "Callee":"Func 2",
      "counts":"2"
    } 
  ] 
}
```
- drawback: not a trace

### where should we insert the code
- to send profile to another server 

![d3](/assets/2024-02-25/d3.png)
