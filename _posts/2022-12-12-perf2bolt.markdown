---
layout: post
title:  "2022-12-12 perf2bolt"
date:   2022-12-8 10:53:46 -0500
categories: cont-opt 
---
### The output of perf script for Branch Events
```
973068           481cd08
973068           481cd0a 0xffffffffb9e00ae7/0x481cd08/P/-/-/0
973068           4840cb5 0x4840baa/0x4840c80/P/-/-/2  0x4840c12/0x4840b93/P/-/-/10  0x4840b8e/0x4840c00/P/-/-/218 0x481ea12/0x4840b48/P/-/-/18  0x481c8c1/0x481e9c0/P/-/-/74  0x481c872/0x481c89c/P/-/-/3  0x481caf1/0x481c849/M/-/-/198  0x481cd55/0x481ca8d/M/-/-/379  0xffffffffb9e00ae7/0x481cd0a/P/-/-/0  0xffffffffb9e00ae7/0x481cd08/P/-/-/0
973068           27b3467 0x27cdec7/0x27b3457/P/-/-/30  0x27b3452/0x27cdea0/P/-/-/5  0x480006e/0x27b3420/P/-/-/272 0x481a6ea/0x4800040/P/-/-/10  0x481a42e/0x481a6c0/P/-/-/2  0x481a75e/0x481a426/P/-/-/3  0x481a7b8/0x481a74f/P/-/-/1 0x4827a71/0x481a7ad/P/-/-/1  0x483bd31/0x4827a6d/P/-/-/3  0x4827a68/0x483bd10/P/-/-/3  0x481a7a8/0x4827a60/P/-/-/3  0x481a74a/0x481a792/P/-/-/15  0x481a421/0x481a71c/P/-/-/1  0x481a75e/0x481a410/P/-/-/3  0x481a7b8/0x481a74f/P/-/-/5 0x4827a71/0x481a7ad/P/-/-/4  0x483bd31/0x4827a6d/P/-/-/2  0x4827a68/0x483bd10/P/-/-/7  0x481a7a8/0x4827a60/P/-/-/21 0x481a74a/0x481a792/P/-/-/13  0x481a40b/0x481a71c/P/-/-/3  0x481acc8/0x481a3d5/P/-/-/14  0x481a3d0/0x481ac8a/P/-/-/1 0x481aa96/0x481a3cd/P/-/-/11  0x481a3c8/0x481aa52/P/-/-/1  0x483b2a0/0x481a3c5/P/-/-/4  0x483b7b8/0x483b271/P/-/-/54 0x483be01/0x483b76c/P/-/-/24  0x7f2b7d1c2c7d/0x483bdc6/P/-/-/1  0xcdedf4/0x7f2b7d1c2c70/P/-/-/1  0x483bdc1/0xcdedf0/P/-/-/9  0x483b767/0x483bd42/P/-/-/60
973068           482e2fd 0x482e2ee/0x482e2f4/P/-/-/61  0x482e09c/0x482e2e0/P/-/-/28  0x4834f41/0x482e081/P/-/-/15 0x4834f0b/0x4834f1b/P/-/-/1  0x4834f19/0x4834eff/P/-/-/7  0x482dd63/0x4834eb4/P/-/-/2  0x4834eae/0x482dd5a/P/-/-/58 0x482e07c/0x4834e5c/P/-/-/32  0x482dc15/0x482e048/P/-/-/15  0x482dd30/0x482dbff/P/-/-/3  0x484aecb/0x482dd0e/P/-/-/1 0x482dd53/0x484aec0/P/-/-/1  0x482dd08/0x482dd4c/P/-/-/8  0x484aecb/0x482dcf1/P/-/-/15  0x482dceb/0x484aec0/P/-/-/9 0x482dd39/0x482dcd5/P/-/-/1  0x482d34b/0x482dd37/P/-/-/1  0x482dd31/0x482d340/P/-/-/11  0x482dcc7/0x482dd31/P/-/-/1 0x482dca1/0x482dcbc/P/-/-/20  0x482dbfa/0x482dc80/P/-/-/4  0x482dc0a/0x482dbf1/P/-/-/1  0x482dd30/0x482dbff/P/-/-/3 0x482ddbe/0x482dd0e/P/-/-/36  0x482dd53/0x482dd80/M/-/-/30  0x482dd08/0x482dd4c/M/-/-/8  0x482ddbe/0x482dcf1/P/-/-/11 0x482dceb/0x482dd80/P/-/-/2  0x482dd63/0x482dccf/P/-/-/1  0x482dcc9/0x482dd5a/P/-/-/2  0x482f307/0x482dcac/P/-/-/4 0x482f83b/0x482f2ce/P/-/-/1
```


In [parseBranchEvents()](https://github.com/zyuxuan0115/llvm-project/blob/main/bolt/lib/Profile/DataAggregator.cpp#L1395), it calls [parseBranchSample()](https://github.com/zyuxuan0115/llvm-project/blob/main/bolt/lib/Profile/DataAggregator.cpp#L1069)
- `parseBranchSample()` will first extract PID from the `perf script`'s output
  + compare this PID with the PID stored in `BinaryMMapInfo`
- `parseBranchSample()` will then extract Address from the `perf script`'s output
- after get the `PID` and `Address` of the branch, `parseBranchSample()` calls [parseLBREntry()]()
- In `parseLBREntry()`, it parses the string by `/`, and then records:
  + the first address to `Res.From`
  + the second address to `Res.To`
  + the third element into `Res.Mispred`

```
PID=2833111, 0000000004637c86
(Res.From): 0x46291a3, (Res.To): 0x4637c58, (MispredStr): P
(Res.From): 0x4631345, (Res.To): 0x462907b, (MispredStr): P
(Res.From): 0x4631c90, (Res.To): 0x4631321, (MispredStr): P
(Res.From): 0x7f68d11259c7, (Res.To): 0x4631c8c, (MispredStr): P
(Res.From): 0x7f68d1125b4a, (Res.To): 0x7f68d11259a5, (MispredStr): P
(Res.From): 0x7f68d112590f, (Res.To): 0x7f68d1125b28, (MispredStr): P
(Res.From): 0x7f68d112975b, (Res.To): 0x7f68d1125870, (MispredStr): P
(Res.From): 0x38ca754, (Res.To): 0x7f68d1129700, (MispredStr): M
(Res.From): 0x460005e, (Res.To): 0x38ca750, (MispredStr): P
(Res.From): 0x35dafc6, (Res.To): 0x460004d, (MispredStr): P
(Res.From): 0x35daf7a, (Res.To): 0x35dafa5, (MispredStr): P
(Res.From): 0x35f7092, (Res.To): 0x35daf77, (MispredStr): P
(Res.From): 0x35f7066, (Res.To): 0x35f7090, (MispredStr): P
(Res.From): 0x35daf72, (Res.To): 0x35f7060, (MispredStr): P
(Res.From): 0x460004a, (Res.To): 0x35daf40, (MispredStr): P
(Res.From): 0x4631c87, (Res.To): 0x460001c, (MispredStr): P
(Res.From): 0x7f68d121aac8, (Res.To): 0x4631c6e, (MispredStr): P
(Res.From): 0x7f68d121aa8e, (Res.To): 0x7f68d121aa9e, (MispredStr): P
(Res.From): 0x38ca1d4, (Res.To): 0x7f68d121aa70, (MispredStr): M
(Res.From): 0x4631c69, (Res.To): 0x38ca1d0, (MispredStr): P
(Res.From): 0x463131c, (Res.To): 0x4631c40, (MispredStr): P
(Res.From): 0x4632400, (Res.To): 0x4631312, (MispredStr): P
(Res.From): 0x4632768, (Res.To): 0x46323d9, (MispredStr): P
(Res.From): 0x7f68d11259c7, (Res.To): 0x463275e, (MispredStr): P
(Res.From): 0x7f68d1125b4a, (Res.To): 0x7f68d11259a5, (MispredStr): P
(Res.From): 0x7f68d112590f, (Res.To): 0x7f68d1125b28, (MispredStr): P
(Res.From): 0x7f68d112975b, (Res.To): 0x7f68d1125870, (MispredStr): P
(Res.From): 0x38ca754, (Res.To): 0x7f68d1129700, (MispredStr): M
(Res.From): 0x460005e, (Res.To): 0x38ca750, (MispredStr): P
(Res.From): 0x35dafc6, (Res.To): 0x460004d, (MispredStr): P
(Res.From): 0x35daf7a, (Res.To): 0x35dafa5, (MispredStr): P
(Res.From): 0x35f7092, (Res.To): 0x35daf77, (MispredStr): P
```

- Then it will check the if the `LBR.From`(aka. `Res.From`) is any address like `FFFFFFFFB9E00AE7`.
  + It means that it's an interrupt from the OS. 
  + If it's from the OS, `perf2bolt` will discard this LBR sample. 
- Finally it checks if `BC->HasFixedLoadAddress` is true
  + If it's not `true`, need to run `adjustLBR`
  + However it seems it's always `true`

