---
layout: post
title:  "2023-1-19 performance results"
date:   2023-1-19 8:53:46 -0500
categories: cont-opt 
---
### Address Translation Caching
- Produce significant performance improvement
    + When running perf2bolt on a profile collected from a 60 seconds duration
    + The command is `time perf2bolt --ignore-build-id --cont-opt -p perf2.data -o perf2.fdata mysqld.bolt`
    + We have
```
real	0m23.765s
user	0m27.446s
sys	0m1.482s
```

### The performance of mysqld.bolt built by a profiles collected from a previously BOLTed binary
- <strong>case 1</strong>
    + first, offline build a BOLTed binary <strong>A</strong> from original mysqld binary and `oltp_read_only` as input
    + then, measure the performance of `oltp_read_only` on <strong>A</strong>
    + then, run <strong>A</strong> with `oltp_read_only` and collet the profile <strong>P</strong>
    + then, offline build a new BOLTed binary <strong>B</strong> based on <strong>A</strong> and <strong>P</strong>
    + finally, measure `oltp_read_only`on <strong>B</strong>'s performance 

|   | orig | A | B | 
| :----: |:----:|   :----:| :----: | 
| 1 | 5552.14 | 9141.72 | 9247.97 | 
| 2 | 5568.62 | 9187.38 | 9183.48 |
| 3 | 5650.95 | 9218.45 | 8907.05 |
| 4 | 5684.76 | 9227.68 | 9019.81 |
| 5 | 5559.51 | 9136.04 | 9173.00 |
| average | 5603.195 | 9182.254 | 9106.262 |

- <strong>case 2</strong>
    + first, offline build a BOLTed binary <strong>A</strong> from original mysqld binary with `oltp_insert` as input
    + then, measure the performance of `oltp_read_only` on <strong>A</strong>
    + then, run `oltp_read_only` on <strong>A</strong> and collet the profile <strong>P</strong>
    + then, offline build a new BOLTed binary <strong>B</strong> based on <strong>A</strong> and <strong>P</strong>
    + finally, measure `oltp_read_only`on <strong>B</strong>'s performance

|   | orig | A | B | 
| :----: |:----: |:----:|   :----:| 
| 1 | 5552.14 | 7665.47 | 9119.24 | 
| 2 | 5568.62 | 7600.20 | 9101.92 |
| 3 | 5650.95 | 7631.04 | 9079.38 |
| 4 | 5684.76 | 7605.14 | 8992.69 |
| 5 | 5559.51 | 7435.04 | 9008.56 |
| average | 5603.195 | 7587.378 | 9060.358 |  

- <strong>case 3 (profile collected from ocolos C0 round)</strong>
    + first, in <strong>C0</strong> round, Ocolos builds a BOLTed binary <strong>A</strong> from original mysqld binary with `oltp_read_only` as input
    + then, Ocolos performs code replacement and enters <strong>C1</strong> round
    + then, Ocolos collects profile <strong>P</strong> of `oltp_read_only` with `mysqld` which has code layout replaced by Ocolos. 
    + then shutdown `Ocolos` + `mysqld`
    + then, offline produce a new BOLTed binary <strong>B</strong> based on <strong>A</strong> and <strong>P</strong>
    + finally, measure `oltp_read_only`on <strong>B</strong>'s performance

|   | orig | A | B | 
| :----: |:----:| :----: |:----:|  
| 1 | 5552.14 | 9141.72 | 8597.98 | 
| 2 | 5568.62 | 9187.38 | 8538.13 | 
| 3 | 5650.95 | 9218.45 | 8355.74 | 
| 4 | 5684.76 | 9227.68 | 8493.12 | 
| 5 | 5559.51 | 9136.04 | 8398.40 | 
| average | 5603.195 | 9182.254 | 8476.674 |

- <strong>case 4 (profile collected from ocolos C0 round)</strong>
    + first, in <strong>C0</strong> round, Ocolos builds a BOLTed binary <strong>A</strong> from original mysqld binary with `oltp_insert` as input
    + then, Ocolos performs code replacement and enters <strong>C1</strong> round
    + then, Ocolos collects profile <strong>P</strong> of `oltp_read_only` with `mysqld` which has code layout replaced by Ocolos. 
    + then shutdown `Ocolos` + `mysqld`
    + then, offline produce a new BOLTed binary <strong>B</strong> based on <strong>A</strong> and <strong>P</strong>
    + finally, measure `oltp_read_only`on <strong>B</strong>'s performance

|   | orig | A | B | 
| :----: |:----:| :----: |:----:|  
| 1 | 5552.14 | 9141.72 | 8402.19 | 
| 2 | 5568.62 | 9187.38 | 8474.19 | 
| 3 | 5650.95 | 9218.45 | 8442.67 | 
| 4 | 5684.76 | 9227.68 | 8604.11 | 
| 5 | 5559.51 | 9136.04 | 8373.68 | 
| average | 5603.195 | 9182.254 | 8459.368 |

See Dec 29's post

libunwind in C1 round cannot correctly print the content in the call stack
    