---
layout: post
title:  "2022-12-05 perf2bolt"
date:   2022-12-01 12:53:46 -0500
categories: cont-opt
---
When I tested where got wrong in perf2bolt that generate the following error message 
![error in C1 profile](/assets/2022-11-28/c1_perf2bolt.png)

and 
`PERF2BOLT-WARNING: ignoring mapping of mysqld.bolt at 0x4600000`

The code that causes this error [on github](https://github.com/zyuxuan0115/llvm-project/blob/main/bolt/lib/Profile/DataAggregator.cpp#L2122)
```
bool MatchFound = llvm::any_of(
  llvm::make_second_range(BC->SegmentMapInfo),
  [&](SegmentInfo &SegInfo) {
    // The mapping is page-aligned and hence the MMapAddress could be
    // different from the segment start address. We cannot know the page
    // size of the mapping, but we know it should not exceed the segment
    // alignment value. Hence we are performing an approximate check.
    return SegInfo.Address >= MMapInfo.MMapAddress &&
           SegInfo.Address - MMapInfo.MMapAddress < SegInfo.Alignment;
  }
);
if (!MatchFound) {
  errs() << "PERF2BOLT-WARNING: ignoring mapping of " << NameToUse
         << " at 0x" << Twine::utohexstr(MMapInfo.MMapAddress) << '\n';
  continue;
}
```

I print all address of `SegInfo.Address` and `MMapInfo.MMapAddress` when I run:
- `perf2bolt --ignore-build-id --cont-opt -p perf.data -o perf.fdata mysqld`
- `perf2bolt --ignore-build-id --cont-opt -p perf2.data -o perf2.fdata mysqld.bolt`

where `perf.data` is profile collected from C0 round and `perf2.data` is profile collected from C1 round.

From output of the `perf2bolt` on perf.data + original binary is:
```
SegInfo.Addr=0x200000, SegInfo.Alignment=4096, MMapInfo.MMapAddr=0x1B23000
SegInfo.Addr=0x1B23240, SegInfo.Alignment=4096, MMapInfo.MMapAddr=0x1B23000
``` 

From the output of the `perf2bolt` on perf2.data + BOLTed binary is:
```
SegInfo.Addr=0x200000, SegInfo.Alignment=4096, MMapInfo.MMapAddr=0x4600000
SegInfo.Addr=0x1B23240, SegInfo.Alignment=4096, MMapInfo.MMapAddr=0x4600000
SegInfo.Addr=0x38CDD60, SegInfo.Alignment=4096, MMapInfo.MMapAddr=0x4600000
SegInfo.Addr=0x3A425E0, SegInfo.Alignment=4096, MMapInfo.MMapAddr=0x4600000
SegInfo.Addr=0x4400000, SegInfo.Alignment=0x200000, MMapInfo.MMapAddr=0x4600000
```

From the output of `perf2bolt` on perf_offline_bolt.data + BOLTed binary is:
```
SegInfo.Addr=0x200000, SegInfo.Alignment=4096, MMapInfo.MMapAddr=0x1B23000
SegInfo.Addr=0x1B23240, SegInfo.Alignment=4096, MMapInfo.MMapAddr=0x1B23000
```

in [preprocessProfile()](https://github.com/zyuxuan0115/llvm-project/blob/main/bolt/lib/Profile/DataAggregator.cpp#L468), after process `mmap events`, perf2bolt processes `task events` by [parseTaskEvents()](https://github.com/zyuxuan0115/llvm-project/blob/main/bolt/lib/Profile/DataAggregator.cpp#L544).
And its real location is [here](https://github.com/zyuxuan0115/llvm-project/blob/main/bolt/lib/Profile/DataAggregator.cpp#L2187).

The `perf script --show-task-events`'s output has 2 format.
In `parseTaskEvents()`'s [parseCommExecEvent()](https://github.com/zyuxuan0115/llvm-project/blob/main/bolt/lib/Profile/DataAggregator.cpp#L1824), it only extract the PID(567882) from the first format.
```
          mysqld     0     0.000000: PERF_RECORD_COMM: mysqld:567882/567882
      ib_io_ibuf     0     0.000000: PERF_RECORD_COMM: ib_io_ibuf:567882/567886
       ib_io_log     0     0.000000: PERF_RECORD_COMM: ib_io_log:567882/567887
      ib_io_rd-1     0     0.000000: PERF_RECORD_COMM: ib_io_rd-1:567882/567888
      ib_io_rd-2     0     0.000000: PERF_RECORD_COMM: ib_io_rd-2:567882/567889
       evt_sched     0     0.000000: PERF_RECORD_COMM: evt_sched:567882/567925
     sig_handler     0     0.000000: PERF_RECORD_COMM: sig_handler:567882/567926
    xpl_accept-2     0     0.000000: PERF_RECORD_COMM: xpl_accept-2:567882/567927
        gtid_zip     0     0.000000: PERF_RECORD_COMM: gtid_zip:567882/567929
      connection     0     0.000000: PERF_RECORD_COMM: connection:567882/567935
      connection     0     0.000000: PERF_RECORD_COMM: connection:567882/567943
      connection     0     0.000000: PERF_RECORD_COMM: connection:567882/567945
            perf     0     0.000000: PERF_RECORD_COMM: perf:567984/567984
```

```
      connection 2833674 31994311.298462:       6739 cycles:u:           37aa2c0 pfs_ssl_bio_callback_ex+0x0 (/usr/local/mysql/bin/mysqld)
      connection 2833674 31994311.298477:      26254 cycles:u:           37acaa9 my_hash_sort_bin+0x39 (/usr/local/mysql/bin/mysqld)
      connection 2833674 31994311.298503:      80685 cycles:u:           1f69a24 MYSQLparse+0x1d1c4 (/usr/local/mysql/bin/mysqld)
      connection 2833674 31994311.298565:     167253 cycles:u:           2fcd17b my_lfind+0xeb (/usr/local/mysql/bin/mysqld)
      connection 2833674 31994311.298711:     231161 cycles:u:      7f68d1721b17 BIO_write+0x27 (/usr/lib/x86_64-linux-gnu/libcrypto.so.1.1)
      connection 2833674 31994311.298917:     251726 cycles:u:      7f68d1212ae0 __strcmp_avx2+0x0 (/usr/lib/x86_64-linux-gnu/libc-2.31.so)
      connection 2833674 31994311.299172:     258355 cycles:u:           4637c86 [unknown] (/tmp/perf-2833111.map)
      connection 2833674 31994311.299460:     257795 cycles:u:           37e3880 my_mbcharlen_utf8mb4+0x0 (/usr/local/mysql/bin/mysqld)
      connection 2833674 31994311.299686:     253478 cycles:u:      7f68d19ff003 __pthread_enable_asynccancel+0x23 (/usr/lib/x86_64-linux-gnu/libpthread-2.31.so)
      connection 2833674 31994311.299934:     236427 cycles:u:           35daf77 pfs_memory_free_vc+0x37 (/usr/local/mysql/bin/mysqld)
      connection 2833674 31994311.300185:     236573 cycles:u:           462dba8 [unknown] (/tmp/perf-2833111.map)
      connection 2833674 31994311.300435:     236538 cycles:u:           2fcd124 my_lfind+0x94 (/usr/local/mysql/bin/mysqld)
      connection 2833674 31994311.300645:     236557 cycles:u:           461dfec [unknown] (/tmp/perf-2833111.map)
      connection 2833675 31994311.300655:          1 cycles:u:           46024c5 [unknown] (/tmp/perf-2833111.map)
      connection 2833675 31994311.300666:          1 cycles:u:           46024c5 [unknown] (/tmp/perf-2833111.map)
      connection 2833675 31994311.300672:          4 cycles:u:           46024c5 [unknown] (/tmp/perf-2833111.map)
      connection 2833675 31994311.300678:         25 cycles:u:           46024c5 [unknown] (/tmp/perf-2833111.map)
      connection 2833675 31994311.300683:        160 cycles:u:           46024c5 [unknown] (/tmp/perf-2833111.map)
      connection 2833675 31994311.300689:       1016 cycles:u:           46024c5 [unknown] (/tmp/perf-2833111.map)
```

`parseTaskEvents()` also has a [parseForkEvent()](https://github.com/zyuxuan0115/llvm-project/blob/main/bolt/lib/Profile/DataAggregator.cpp#L2202) function, and it checks whether the perf script result contains ["PERF_RECORD_FORK"](https://github.com/zyuxuan0115/llvm-project/blob/main/bolt/lib/Profile/DataAggregator.cpp#L1864	) 
