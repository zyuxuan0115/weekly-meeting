---
layout: post
title:  "2023-1-24 perf2bolt"
date:   2023-1-24 8:53:46 -0500
categories: cont-opt 
---
### turn LLVM version BOLT into lite mode?
- When I add `--lite` to `llvm-bolt`, it reports the following warning and refuses to enable lite mode. :( 
```
BOLT-WARNING: split function detected on input : _ZL28delete_dictionary_tablespacev.cold/1. The support is limited in relocation mode
BOLT-WARNING: disabling lite mode (-lite) when split functions are present
[tracer] 67427 functions was moved (functions reordered) by BOLT
[tracer(time)] llvm-bolt took 33.795486 seconds to execute
```  
- So BOLT spent 33.8 seconds moving 67427 functions, which is reported by Ocolos

- However, for Facebook BOLT, the output shows that BOLT spent 6.805391 seconds moving 1202 functions.
```
BOLT-WARNING: split function detected on input : _ZL28delete_dictionary_tablespacev.cold/1. The support is limited in relocation mode.
BOLT-WARNING: Ignored 0 functions due to cold fragments.
[tracer] 1202 functions was moved (functions reordered) by BOLT
[tracer(time)] llvm-bolt took 6.805391 seconds to execute
```

### Fix the 2.2% traces mismatching disassembled function contents issue
![perf2bolt-output](/assets/2023-01-24/perf2bolt.png)
- <strong>case 3 (profile collected from ocolos C0 round)</strong>
    + first, in <strong>C0</strong> round, Ocolos builds a BOLTed binary <strong>A</strong> from original mysqld binary with `oltp_read_only` as input
    + then, Ocolos performs code replacement and enters <strong>C1</strong> round
    + then, Ocolos collects profile <strong>P</strong> of `oltp_read_only` with `mysqld` which has code layout replaced by Ocolos. 
    + then shutdown `Ocolos` + `mysqld`
    + then, offline produce a new BOLTed binary <strong>B</strong> based on <strong>A</strong> and <strong>P</strong>
    + finally, measure `oltp_read_only`on <strong>B</strong>'s performance
    + There is also a comparison <strong>B'</strong> where perf2bolt's traces mismatching disassembled function contents is <strong>43%</strong> (a.k.a. we didn't change any address in the profile read by perf2bolt
    + <strong>B</strong> & <strong>B'</strong> use the same profile

|   | orig | A | B | B' |
| :----: |:----:| :----: |:----:| :----:|  
| 1 | 5552.14 | 9141.72 | 8832.37 | 8337.47 |
| 2 | 5568.62 | 9187.38 | 8806.93 | 8331.71 |
| 3 | 5650.95 | 9218.45 | 8865.42 | 8389.13 |
| 4 | 5684.76 | 9227.68 | 8843.36 | 8361.84 |
| 5 | 5559.51 | 9136.04 | 8801.27 | 8328.63 |
| average | 5603.195 | 9182.254 | <strong>8829.87</strong> | 8349.756 |

### Next step 
- fix the issue caused in this figure
![code_layout](/assets/2023-01-19/new_illegal.png)
- check if `perf2bolt` can create the BOLTed text section at any location
   + 
```
BOLT-INFO: first alloc address is 0x200000
BOLT-INFO: creating new program header table at address 0x4400000, offset 0x4200000
```
   + Can BOLT create the new BOLTed text section at a new location that is not overlap with the old BOLTed text section?
   + If we can move BOLTed text section to any location we want, discuss about how to perform continuous optimization
- check if there is a way to change the location of <strong>heap</strong>
   + to debug `perf2bolt`, I moved ocolos to `acggpu1`. 
   + on `acggpu1` it also has the problem that the BOLTed text section overlap with the heap 

### The last bug fix of perf2bolt
- <strong>C0</strong>
   + Before pausing the target process, `Ocolos` has produced `mysqld_0.bolt`
   + During code replacement, `Ocolos` will produce a `callstack_func_0.bin` 
- <strong>C1</strong>
   + after code replacement, `Ocolos` enters the <strong>C1</strong> round, and it collects profile `perf_1.data` by invoking `perf record`
   + with `perf_1.data` + `mysqld_0.bolt` + `callstack_func_0.bin`, `Ocolos` can produce `perf_1.fdata`
   + with `perf_1.fdata` + original `mysqld`, `llvm-bolt` can produce `mysqld_1.bolt`
   + `Ocolos` can then perform <strong>C1</strong>'s code replacement ... 

- the command to run is 
   + `perf2bolt --ignore-build-id --cont-opt --call-stack-func=callstack_func_0.bin -p perf_1.data -o perf_1.fdata mysqld.bolt`

|   | orig | A | B | B' | B_new | ocolos |
| :----: |:----:| :----: |:----:| :----:|  :----:|  
| 1 | 5552.14 | 9141.72 | 8832.37 | 8337.47 | 8808.65 | 8844.84 |
| 2 | 5568.62 | 9187.38 | 8806.93 | 8331.71 | 8892.78 | 8915.71 |
| 3 | 5650.95 | 9218.45 | 8865.42 | 8389.13 | 8838.30 | 8864.76 |
| 4 | 5684.76 | 9227.68 | 8843.36 | 8361.84 | 8946.12 | 8928.08 |
| 5 | 5559.51 | 9136.04 | 8801.27 | 8328.63 | 8858.88 | 8909.38 |
| AVG | 5603.195 | 9182.254 | <strong>8829.87</strong> | 8349.756 | 8868.94 | 8886.554 |

- orig: original 
- A: offline BOLTed 
- B: Profile colleted from C1, without fixing insn in functions on the call stack
- B': Profile collected from C1, without fixing the buggy addresses in the profile
- B_new: Profile collected from C1, fix all buggy addresses
- ocolos: performance after C0's code replacement

